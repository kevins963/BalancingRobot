#ifndef ROBOT_CORE_LSM303D_H_
#define ROBOT_CORE_LSM303D_H_

#include "robot/core/i2c_dev.h"
#include "robot/core/integer.h"
#include "robot/core/util.h"

#define LSM303D_DEVICE_ADDR (0x3A)

#define LSM303D_RA_WHO_AM_I_ADDR 0x0F
#define LSM303D_RA_CTRL0 0x1F
#define LSM303D_RA_CTRL1 0x20
#define LSM303D_RA_CTRL2 0x21
#define LSM303D_RA_CTRL3 0x22
#define LSM303D_RA_CTRL4 0x23
#define LSM303D_RA_CTRL5 0x24
#define LSM303D_RA_CTRL6 0x25
#define LSM303D_RA_CTRL7 0x26
#define LSM303D_RA_STATUS_A 0x27
#define LSM303D_RA_OUT_X_L_A 0x28
#define LSM303D_RA_OUT_X_H_A 0x29
#define LSM303D_RA_OUT_Y_L_A 0x2A
#define LSM303D_RA_OUT_Y_H_A 0xB2
#define LSM303D_RA_OUT_Z_L_A 0x2C
#define LSM303D_RA_OUT_Z_H_A 0x2D
#define LSM303D_RA_FIFO_CTRL 0x2E
#define LSM303D_RA_FIFO_SRC 0x2F
#define LSM303D_RA_IG_CFG1 0x30
#define LSM303D_RA_IG_SRC1 0x31
#define LSM303D_RA_IC_THS1 0x32
#define LSM303D_RA_IC_DUR1 0x33
#define LSM303D_RA_IC_CFG2 0x34
#define LSM303D_RA_IC_SRC2 0x35
#define LSM303D_RA_IC_THS2 0x36
#define LSM303D_RA_IC_DUR2 0x37
#define LSM303D_RA_CLICK_CFG 0x38
#define LSM303D_RA_CLICK_SRC 0x39
#define LSM303D_RA_CLICK_THS 0x3A
#define LSM303D_RA_TIME_LIMIT 0x3B
#define LSM303D_RA_TIME_LATENCY 0x3C
#define LSM303D_RA_TIME_WINDOW 0x3D
#define LSM303D_RA_ACT_THS 0x3E
#define LSM303D_RA_ACT_DUR 0x3F

#define LSM303D_RA_MAX_REGISTERS (0x40)

#define LSM303D_VAL_CTRL0_HPINT_2 MASKED_VALUE(1, BIT_POS_0, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL0_HPINT_1 MASKED_VALUE(1, BIT_POS_1, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL0_HP_CLICK MASKED_VALUE(1, BIT_POS_2, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL0_FTH_EN MASKED_VALUE(1, BIT_POS_5, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL0_FIFO_EN MASKED_VALUE(1, BIT_POS_6, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL0_BOOT MASKED_VALUE(1, BIT_POS_7, BIT_MASK_SIZE_1)

#define LSM303D_VAL_CTRL1_X_EN MASKED_VALUE(1, BIT_POS_0, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL1_Y_EN MASKED_VALUE(1, BIT_POS_1, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL1_Z_EN MASKED_VALUE(1, BIT_POS_2, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL1_BLOCK_UPDATE \
  MASKED_VALUE(1, BIT_POS_3, BIT_MASK_SIZE_1)
#define LSM303D_VAL_CTRL1_ODR_PD MASKED_VALUE(0, BIT_POS_4, BIT_MASK_SIZE_4
#define LSM303D_VAL_CTRL1_ODR_3_125 MASKED_VALUE(1, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_6_25 MASKED_VALUE(2, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_12_5 MASKED_VALUE(3, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_25 MASKED_VALUE(4, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_50 MASKED_VALUE(5, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_100 MASKED_VALUE(6, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_200 MASKED_VALUE(7, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_400 MASKED_VALUE(8, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_800 MASKED_VALUE(9, BIT_POS_4, BIT_MASK_SIZE_4)
#define LSM303D_VAL_CTRL1_ODR_1600 MASKED_VALUE(10, BIT_POS_4, BIT_MASK_SIZE_4)

BEGIN_STRUCT(LSM303D)
I2CDev i2c_dev;
uint8_t device_address;
uint8_t read_buf[LSM303D_RA_MAX_REGISTERS];
uint8_t write_buf[LSM303D_RA_MAX_REGISTERS];
END_STRUCT(LSM303D)

void LSM303D_Init(LSM303D* p_this, const I2cFunctions* i2c_functions);
void LSM303D_Start(LSM303D* p_this);
void LSM303D_ReadAll(LSM303D* p_this);
void LSM303D_ReadWhoAmI(LSM303D* p_this);
void LSM303D_OnComplete(LSM303D* p_this);

#endif  // ROBOT_CORE_LSM303D_H_
